name: Test

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
            poetry lock --no-update
            poetry install --no-interaction --no-root
      - name: Install project
        run: poetry install --no-interaction
      - name: Tests
        run: |
            poetry run pytest ./src/ambient_wx -v
      - name: Imports
        run: poetry run isort ./src/ambient_wx -c --diff
      - name: Linting
        run: poetry run pflake8 ./src/ambient_wx
      - name: Coverage
        run: poetry run coverage run -m pytest && poetry run coverage report -m --fail-under=80